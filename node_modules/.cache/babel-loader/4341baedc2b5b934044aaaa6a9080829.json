{"ast":null,"code":"\"use strict\";\n\nvar Shape = require(\"./src/shape\");\n\nvar _canvas = document.createElement(\"canvas\");\n\nvar _ctx = _canvas.getContext(\"2d\");\n\nvar cache = {};\n/**\n * create a Shape object\n * \n * @param {CanvasRenderingContext2D} ctx canvas rendering content\n * @param {Object} options ctx config options\n * @param {Number} options.lineWidth ctx line width\n * @param {DOMString | CanvasGradient | CanvasPattern} options.fillStyle ctx fill style\n * @param {DOMString | CanvasGradient | CanvasPattern} options.strokeStyle ctx stroke style\n * @param {DOMString} options.font ctx font\n * @returns {Shape}\n */\n\nfunction createShape(ctx, options) {\n  var shape = new Shape(ctx, options);\n  return shape;\n}\n\nfunction SD(obj, options) {\n  var id;\n\n  if (_ctx.__proto__.isPrototypeOf(obj)) {\n    id = obj.canvas.id;\n\n    if (!!cache[id]) {\n      return cache[id];\n    } else {\n      var shape = createShape(obj, options);\n      cache[id] = shape;\n      return shape;\n    }\n  } else if (typeof obj === \"string\") {\n    id = obj;\n\n    if (!!cache[id]) {\n      return cache[id];\n    } else {\n      var canvas = document.getElementById(id);\n      if (!canvas) throw new ReferenceError(\"canvas not found!\");\n      var ctx = canvas.getContext(\"2d\");\n      var shape = createShape(ctx, options);\n      cache[id] = shape;\n      return shape;\n    }\n  } else {\n    throw TypeError(\"obj should be type of CanvasRenderingContext2D or String\");\n  }\n}\n\nSD.createShape = createShape;\nSD.Shape = Shape;\nSD.extend = Shape.fn.extend;\nSD.cache = cache;\n\nSD.clearCache = function () {\n  var keys = Object.keys(cache);\n  keys.forEach(function (key) {\n    delete cache[key];\n  });\n};\n\nmodule.exports = SD;","map":{"version":3,"sources":["/Users/yveshuber/Documents/Dokumente/020_BBW/ABK/001_Mathe/dreiecksrechner/node_modules/shape-drawing/index.js"],"names":["Shape","require","_canvas","document","createElement","_ctx","getContext","cache","createShape","ctx","options","shape","SD","obj","id","__proto__","isPrototypeOf","canvas","getElementById","ReferenceError","TypeError","extend","fn","clearCache","keys","Object","forEach","key","module","exports"],"mappings":"AAAA;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,aAAD,CAAnB;;AAEA,IAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAd;;AACA,IAAIC,IAAI,GAAGH,OAAO,CAACI,UAAR,CAAmB,IAAnB,CAAX;;AACA,IAAIC,KAAK,GAAG,EAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,OAA1B,EAAmC;AAC/B,MAAIC,KAAK,GAAG,IAAIX,KAAJ,CAAUS,GAAV,EAAeC,OAAf,CAAZ;AACA,SAAOC,KAAP;AACH;;AAED,SAASC,EAAT,CAAYC,GAAZ,EAAiBH,OAAjB,EAA0B;AACtB,MAAII,EAAJ;;AACA,MAAIT,IAAI,CAACU,SAAL,CAAeC,aAAf,CAA6BH,GAA7B,CAAJ,EAAuC;AACnCC,IAAAA,EAAE,GAAGD,GAAG,CAACI,MAAJ,CAAWH,EAAhB;;AACA,QAAI,CAAC,CAACP,KAAK,CAACO,EAAD,CAAX,EAAiB;AACb,aAAOP,KAAK,CAACO,EAAD,CAAZ;AACH,KAFD,MAEO;AACH,UAAIH,KAAK,GAAGH,WAAW,CAACK,GAAD,EAAMH,OAAN,CAAvB;AACAH,MAAAA,KAAK,CAACO,EAAD,CAAL,GAAYH,KAAZ;AACA,aAAOA,KAAP;AACH;AACJ,GATD,MASO,IAAI,OAAOE,GAAP,KAAe,QAAnB,EAA6B;AAChCC,IAAAA,EAAE,GAAGD,GAAL;;AACA,QAAI,CAAC,CAACN,KAAK,CAACO,EAAD,CAAX,EAAiB;AACb,aAAOP,KAAK,CAACO,EAAD,CAAZ;AACH,KAFD,MAEO;AACH,UAAIG,MAAM,GAAGd,QAAQ,CAACe,cAAT,CAAwBJ,EAAxB,CAAb;AACA,UAAI,CAACG,MAAL,EAAa,MAAM,IAAIE,cAAJ,CAAmB,mBAAnB,CAAN;AAEb,UAAIV,GAAG,GAAGQ,MAAM,CAACX,UAAP,CAAkB,IAAlB,CAAV;AACA,UAAIK,KAAK,GAAGH,WAAW,CAACC,GAAD,EAAMC,OAAN,CAAvB;AACAH,MAAAA,KAAK,CAACO,EAAD,CAAL,GAAYH,KAAZ;AACA,aAAOA,KAAP;AACH;AACJ,GAbM,MAaA;AACH,UAAMS,SAAS,CAAC,0DAAD,CAAf;AACH;AACJ;;AAEDR,EAAE,CAACJ,WAAH,GAAiBA,WAAjB;AACAI,EAAE,CAACZ,KAAH,GAAWA,KAAX;AACAY,EAAE,CAACS,MAAH,GAAYrB,KAAK,CAACsB,EAAN,CAASD,MAArB;AACAT,EAAE,CAACL,KAAH,GAAWA,KAAX;;AACAK,EAAE,CAACW,UAAH,GAAgB,YAAY;AACxB,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYjB,KAAZ,CAAX;AACAiB,EAAAA,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAe;AACxB,WAAOpB,KAAK,CAACoB,GAAD,CAAZ;AACH,GAFD;AAGH,CALD;;AAOAC,MAAM,CAACC,OAAP,GAAiBjB,EAAjB","sourcesContent":["\"use strict\";\nvar Shape = require(\"./src/shape\");\n\nvar _canvas = document.createElement(\"canvas\");\nvar _ctx = _canvas.getContext(\"2d\");\nvar cache = {};\n\n/**\n * create a Shape object\n * \n * @param {CanvasRenderingContext2D} ctx canvas rendering content\n * @param {Object} options ctx config options\n * @param {Number} options.lineWidth ctx line width\n * @param {DOMString | CanvasGradient | CanvasPattern} options.fillStyle ctx fill style\n * @param {DOMString | CanvasGradient | CanvasPattern} options.strokeStyle ctx stroke style\n * @param {DOMString} options.font ctx font\n * @returns {Shape}\n */\nfunction createShape(ctx, options) {\n    var shape = new Shape(ctx, options);\n    return shape;\n}\n\nfunction SD(obj, options) {\n    var id;\n    if (_ctx.__proto__.isPrototypeOf(obj)) {\n        id = obj.canvas.id;\n        if (!!cache[id]) {\n            return cache[id];\n        } else {\n            var shape = createShape(obj, options);\n            cache[id] = shape;\n            return shape;\n        }\n    } else if (typeof obj === \"string\") {\n        id = obj;\n        if (!!cache[id]) {\n            return cache[id];\n        } else {\n            var canvas = document.getElementById(id);\n            if (!canvas) throw new ReferenceError(\"canvas not found!\");\n\n            var ctx = canvas.getContext(\"2d\");\n            var shape = createShape(ctx, options);\n            cache[id] = shape;\n            return shape;\n        }\n    } else {\n        throw TypeError(\"obj should be type of CanvasRenderingContext2D or String\");\n    }\n}\n\nSD.createShape = createShape;\nSD.Shape = Shape;\nSD.extend = Shape.fn.extend;\nSD.cache = cache;\nSD.clearCache = function () {\n    var keys = Object.keys(cache);\n    keys.forEach(function (key) {\n        delete cache[key];\n    });\n}\n\nmodule.exports = SD;\n"]},"metadata":{},"sourceType":"script"}