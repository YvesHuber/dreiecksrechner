{"ast":null,"code":"var _jsxFileName = \"/Users/yveshuber/Documents/Dokumente/020_BBW/ABK/001_Mathe/dreiecksrechner/src/Dreieck.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dreieck() {\n  _s();\n\n  window.addEventListener('DOMContentLoaded', function () {\n    var width = 600;\n    var height = 400;\n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(40, width / height, 1, 1000);\n    camera.position.z = 100;\n    scene.add(camera);\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(width, height);\n    document.body.appendChild(renderer.domElement);\n    var geom = new THREE.Geometry();\n    var v1 = new THREE.Vector3(0, 0, 0);\n    var v2 = new THREE.Vector3(30, 0, 0);\n    var v3 = new THREE.Vector3(30, 40, 0);\n    console.log(geom.vertices);\n    geom.vertices.push(new THREE.Vertex(v1));\n    geom.vertices.push(new THREE.Vertex(v2));\n    geom.vertices.push(new THREE.Vertex(v3));\n    geom.faces.push(new THREE.Face3(0, 1, 2));\n    geom.computeFaceNormals();\n    var mesh = new THREE.Mesh(geom, new THREE.MeshNormalMaterial());\n    scene.add(mesh);\n    renderer.render(scene, camera);\n  }, false);\n  const [alpha, setalpha] = useState(0);\n  const [beta, setbeta] = useState(0);\n  const [gamma, setgamma] = useState(0);\n\n  function calculategamma() {\n    let result;\n    result = 180 - alpha - beta;\n    setgamma(result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Alpha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: alpha,\n        onChange: e => {\n          if (e.target.value <= 178) {\n            setalpha(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Beta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: beta,\n        onChange: e => {\n          if (e.target.value <= 178) {\n            setbeta(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        value: \"calculate\",\n        onClick: calculategamma,\n        children: \"calculate \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Alpha = \", alpha]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Beta = \", beta]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gamma = \", gamma]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dreieck, \"RJXizNvuMv0y59ZkVK+tGrYj0Ko=\");\n\n_c = Dreieck;\nexport default Dreieck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dreieck\");","map":{"version":3,"sources":["/Users/yveshuber/Documents/Dokumente/020_BBW/ABK/001_Mathe/dreiecksrechner/src/Dreieck.js"],"names":["useEffect","useState","THREE","Dreieck","window","addEventListener","width","height","scene","Scene","camera","PerspectiveCamera","position","z","add","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geom","Geometry","v1","Vector3","v2","v3","console","log","vertices","push","Vertex","faces","Face3","computeFaceNormals","mesh","Mesh","MeshNormalMaterial","render","alpha","setalpha","beta","setbeta","gamma","setgamma","calculategamma","result","e","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useEffect, useState} from \"react\";\nimport * as THREE from 'three';\n\nfunction Dreieck() {\n\n\n  window.addEventListener( 'DOMContentLoaded', function(){\n    var width = 600;\n    var height = 400;\n\n    var scene = new THREE.Scene();\n\n    var camera = new THREE.PerspectiveCamera( 40, width / height, 1, 1000 );\n    camera.position.z = 100;\n    scene.add( camera );\n    \n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize( width, height );\n    document.body.appendChild( renderer.domElement );\n    \n    var geom = new THREE.Geometry();\n    var v1 = new THREE.Vector3(0,0,0);\n    var v2 = new THREE.Vector3(30,0,0);\n    var v3 = new THREE.Vector3(30,40,0);\n    \n    console.log(geom.vertices)\n    geom.vertices.push(new THREE.Vertex(v1));\n    geom.vertices.push(new THREE.Vertex(v2));\n    geom.vertices.push(new THREE.Vertex(v3));\n    \n    geom.faces.push( new THREE.Face3( 0, 1, 2 ) );\n    geom.computeFaceNormals();\n    \n    var mesh= new THREE.Mesh( geom, new THREE.MeshNormalMaterial() );\n    scene.add(mesh);\n    \n    renderer.render( scene, camera );\n}, false);\n  \n\n\n    const [alpha, setalpha] = useState(0);\n    const [beta, setbeta] = useState(0);\n    const [gamma, setgamma] = useState(0);\n\n    function calculategamma(){\n      let result;\n      result = 180-alpha-beta;\n        setgamma(result);\n    }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      \n        <lable>Alpha</lable>\n      <input type=\"text\" value={alpha} onChange={ (e) => {if(e.target.value <= 178){\n          setalpha(e.target.value)\n      }}}/>\n      <lable>Beta</lable>\n      <input type=\"text\" value={beta} onChange={ (e) => {if(e.target.value <= 178){\n          setbeta(e.target.value)\n      }}}/>\n      <button type=\"button\" value=\"calculate\" onClick={calculategamma}>calculate </button>\n\n      <p>Alpha = {alpha}</p>\n      <p>Beta = {beta}</p>\n      <p>Gamma = {gamma}</p>\n\n\n      <div id=\"c\"></div>\n\n\n      \n\n\n        \n      </header>\n    </div>\n  );\n}\nexport default Dreieck;\n"]},"metadata":{},"sourceType":"module"}