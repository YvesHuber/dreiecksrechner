{"ast":null,"code":"\"use strict\";\n\nvar setCtx = require(\"./setCtx\");\n/**\n * draw a polyline\n * \n * @param {CanvasRenderingContext2D} ctx canvas rendering content\n * @returns {Object}\n */\n\n\nfunction drawPolyline(ctx) {\n  var args = [].slice.call(arguments, 1);\n  ctx = setCtx.bind(this)(ctx);\n  ctx.beginPath();\n  args.map(function (arg, index) {\n    if (index % 2 === 0) {\n      if (index === 0) {\n        ctx.moveTo(args[index], args[index + 1]);\n      } else {\n        ctx.lineTo(args[index], args[index + 1]);\n      }\n    }\n  });\n  return !this || this === window ? ctx : this;\n}\n\nmodule.exports = drawPolyline;","map":{"version":3,"sources":["/Users/yveshuber/Documents/Dokumente/020_BBW/ABK/001_Mathe/dreiecksrechner/node_modules/shape-drawing/src/polyline.js"],"names":["setCtx","require","drawPolyline","ctx","args","slice","call","arguments","bind","beginPath","map","arg","index","moveTo","lineTo","window","module","exports"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,MAAIC,IAAI,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,EAAyB,CAAzB,CAAX;AAEAJ,EAAAA,GAAG,GAAGH,MAAM,CAACQ,IAAP,CAAY,IAAZ,EAAkBL,GAAlB,CAAN;AAEAA,EAAAA,GAAG,CAACM,SAAJ;AACAL,EAAAA,IAAI,CAACM,GAAL,CAAS,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC3B,QAAIA,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;AACjB,UAAIA,KAAK,KAAK,CAAd,EAAiB;AACbT,QAAAA,GAAG,CAACU,MAAJ,CAAWT,IAAI,CAACQ,KAAD,CAAf,EAAwBR,IAAI,CAACQ,KAAK,GAAG,CAAT,CAA5B;AACH,OAFD,MAEO;AACHT,QAAAA,GAAG,CAACW,MAAJ,CAAWV,IAAI,CAACQ,KAAD,CAAf,EAAwBR,IAAI,CAACQ,KAAK,GAAG,CAAT,CAA5B;AACH;AACJ;AACJ,GARD;AAUA,SAAO,CAAC,IAAD,IAAS,SAASG,MAAlB,GAA2BZ,GAA3B,GAAiC,IAAxC;AACH;;AAEDa,MAAM,CAACC,OAAP,GAAiBf,YAAjB","sourcesContent":["\"use strict\";\nvar setCtx = require(\"./setCtx\");\n\n/**\n * draw a polyline\n * \n * @param {CanvasRenderingContext2D} ctx canvas rendering content\n * @returns {Object}\n */\nfunction drawPolyline(ctx) {\n    var args = [].slice.call(arguments, 1);\n\n    ctx = setCtx.bind(this)(ctx);\n\n    ctx.beginPath();\n    args.map(function (arg, index) {\n        if (index % 2 === 0) {\n            if (index === 0) {\n                ctx.moveTo(args[index], args[index + 1])\n            } else {\n                ctx.lineTo(args[index], args[index + 1])\n            }\n        }\n    })\n\n    return !this || this === window ? ctx : this;\n}\n\nmodule.exports = drawPolyline;"]},"metadata":{},"sourceType":"script"}