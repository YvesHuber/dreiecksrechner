{"ast":null,"code":"\"use strict\";\n\nvar actionMap = {\n  M: \"moveTo\",\n  L: \"lineTo\",\n  Z: \"closePath\",\n  C: \"arcTo\",\n  Q: \"quadraticCurveTo\",\n  S: \"bezierCurveTo\"\n};\n\nfunction parsePath(data) {\n  if (typeof data === \"string\") {\n    var result = data.match(/\\w([\\s\\d\\.,]+\\d)?/gi);\n    var array = [];\n\n    if (result !== null) {\n      array = result.map(function (item) {\n        var _result = item.match(/(\\w)([\\s\\d\\.,]+)?/);\n\n        if (_result !== null) {\n          var action = actionMap[_result[1].toUpperCase()];\n\n          if (!action) {\n            throw \"invalid path\";\n          }\n\n          return {\n            action: action,\n            data: _result[2] ? _result[2].split(/[,\\s]/).filter(function (item) {\n              return item !== \"\";\n            }).map(function (item) {\n              return parseFloat(item);\n            }) : []\n          };\n        }\n      });\n    }\n\n    return array;\n  }\n\n  throw new TypeError(\"path must be type of string\");\n}\n\nmodule.exports = parsePath;","map":{"version":3,"sources":["/Users/yveshuber/Documents/Dokumente/020_BBW/ABK/001_Mathe/dreiecksrechner/node_modules/shape-drawing/src/parsePath.js"],"names":["actionMap","M","L","Z","C","Q","S","parsePath","data","result","match","array","map","item","_result","action","toUpperCase","split","filter","parseFloat","TypeError","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAG;AACZC,EAAAA,CAAC,EAAE,QADS;AAEZC,EAAAA,CAAC,EAAE,QAFS;AAGZC,EAAAA,CAAC,EAAE,WAHS;AAIZC,EAAAA,CAAC,EAAE,OAJS;AAKZC,EAAAA,CAAC,EAAE,kBALS;AAMZC,EAAAA,CAAC,EAAE;AANS,CAAhB;;AASA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC1B,QAAIC,MAAM,GAAGD,IAAI,CAACE,KAAL,CAAW,qBAAX,CAAb;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAIF,MAAM,KAAK,IAAf,EAAqB;AACjBE,MAAAA,KAAK,GAAGF,MAAM,CAACG,GAAP,CAAW,UAAUC,IAAV,EAAgB;AAC/B,YAAIC,OAAO,GAAGD,IAAI,CAACH,KAAL,CAAW,mBAAX,CAAd;;AACA,YAAII,OAAO,KAAK,IAAhB,EAAsB;AAClB,cAAIC,MAAM,GAAGf,SAAS,CAACc,OAAO,CAAC,CAAD,CAAP,CAAWE,WAAX,EAAD,CAAtB;;AACA,cAAI,CAACD,MAAL,EAAa;AACT,kBAAM,cAAN;AACH;;AACD,iBAAO;AACHA,YAAAA,MAAM,EAAEA,MADL;AAEHP,YAAAA,IAAI,EAAEM,OAAO,CAAC,CAAD,CAAP,GACAA,OAAO,CAAC,CAAD,CAAP,CAAWG,KAAX,CAAiB,OAAjB,EAA0BC,MAA1B,CAAiC,UAAUL,IAAV,EAAgB;AAAC,qBAAOA,IAAI,KAAK,EAAhB;AAAmB,aAArE,EAAuED,GAAvE,CAA2E,UAAUC,IAAV,EAAgB;AAAC,qBAAOM,UAAU,CAACN,IAAD,CAAjB;AAAwB,aAApH,CADA,GAEA;AAJH,WAAP;AAOH;AACJ,OAfO,CAAR;AAgBH;;AACD,WAAOF,KAAP;AACH;;AAED,QAAM,IAAIS,SAAJ,CAAc,6BAAd,CAAN;AACH;;AAEDC,MAAM,CAACC,OAAP,GAAiBf,SAAjB","sourcesContent":["\"use strict\";\n\nvar actionMap = {\n    M: \"moveTo\",\n    L: \"lineTo\",\n    Z: \"closePath\",\n    C: \"arcTo\",\n    Q: \"quadraticCurveTo\",\n    S: \"bezierCurveTo\"\n};\n\nfunction parsePath(data) {\n    if (typeof data === \"string\") {\n        var result = data.match(/\\w([\\s\\d\\.,]+\\d)?/gi);\n        var array = [];\n        if (result !== null) {\n            array = result.map(function (item) {\n                var _result = item.match(/(\\w)([\\s\\d\\.,]+)?/);\n                if (_result !== null) {\n                    var action = actionMap[_result[1].toUpperCase()];\n                    if (!action) {\n                        throw \"invalid path\";\n                    }\n                    return {\n                        action: action,\n                        data: _result[2] \n                            ? _result[2].split(/[,\\s]/).filter(function (item) {return item !== \"\"}).map(function (item) {return parseFloat(item)})\n                            : []\n                    };\n\n                }\n            });\n        }\n        return array;\n    }\n\n    throw new TypeError(\"path must be type of string\");\n}\n\nmodule.exports = parsePath;"]},"metadata":{},"sourceType":"script"}