{"ast":null,"code":"\"use strict\";\n\nvar currying = require(\"zz-utils/src/function/currying\");\n\nvar isPlainObj = require(\"zz-utils/src/object/isPlainObj\");\n\nvar apply = require(\"./apply\");\n\nvar extendFromCtx = require(\"./extendFromCtx\");\n\nvar defaultPointSize = 3;\n/**\n * Shape object constructor\n * \n * @constructor\n * @param {CanvasRenderingContext2D} ctx canvas rendering content\n * @param {Object} options ctx config options\n * @param {Number} options.lineWidth ctx line width\n * @param {DOMString | CanvasGradient | CanvasPattern} options.fillStyle ctx fill style\n * @param {DOMString | CanvasGradient | CanvasPattern} options.strokeStyle ctx stroke style\n * @param {DOMString} options.font ctx font\n * @returns {Shape}\n */\n\nfunction Shape(ctx, options) {\n  this.ctx = ctx;\n\n  if (isPlainObj(options)) {\n    var keys = Object.keys(options);\n    keys.forEach(function (key) {\n      require(\"./setting\")(ctx, key, options[key]);\n    });\n  }\n}\n\nShape.prototype = Shape.fn = {\n  constructor: Shape,\n  pointSize: defaultPointSize,\n  point: currying(require(\"./point\"), null, defaultPointSize),\n  line: currying(require(\"./line\"), null),\n  polyline: currying(require(\"./polyline\"), null),\n  polygon: currying(require(\"./polygon\"), null),\n  circle: currying(require(\"./circle\"), null),\n  path: currying(require(\"./path\"), null)\n};\nShape.fn.extend = currying(require(\"./extend\"), Shape.fn);\nextendFromCtx(Shape.fn);\nShape.prototype.rect = currying(require(\"./rect\"), null);\nmodule.exports = Shape;","map":{"version":3,"sources":["/Users/yveshuber/Documents/Dokumente/020_BBW/ABK/001_Mathe/dreiecksrechner/node_modules/shape-drawing/src/shape.js"],"names":["currying","require","isPlainObj","apply","extendFromCtx","defaultPointSize","Shape","ctx","options","keys","Object","forEach","key","prototype","fn","constructor","pointSize","point","line","polyline","polygon","circle","path","extend","rect","module","exports"],"mappings":"AAAA;;AACA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gCAAD,CAAtB;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gCAAD,CAAxB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,iBAAD,CAA3B;;AACA,IAAII,gBAAgB,GAAG,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,GAAf,EAAoBC,OAApB,EAA6B;AACzB,OAAKD,GAAL,GAAWA,GAAX;;AAEA,MAAIL,UAAU,CAACM,OAAD,CAAd,EAAyB;AACrB,QAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,OAAZ,CAAX;AACAC,IAAAA,IAAI,CAACE,OAAL,CAAa,UAAUC,GAAV,EAAe;AACxBX,MAAAA,OAAO,CAAC,WAAD,CAAP,CAAqBM,GAArB,EAA0BK,GAA1B,EAA+BJ,OAAO,CAACI,GAAD,CAAtC;AACH,KAFD;AAGH;AACJ;;AAEDN,KAAK,CAACO,SAAN,GAAkBP,KAAK,CAACQ,EAAN,GAAW;AACzBC,EAAAA,WAAW,EAAET,KADY;AAEzBU,EAAAA,SAAS,EAAEX,gBAFc;AAGzBY,EAAAA,KAAK,EAAEjB,QAAQ,CAACC,OAAO,CAAC,SAAD,CAAR,EAAqB,IAArB,EAA2BI,gBAA3B,CAHU;AAIzBa,EAAAA,IAAI,EAAElB,QAAQ,CAACC,OAAO,CAAC,QAAD,CAAR,EAAoB,IAApB,CAJW;AAKzBkB,EAAAA,QAAQ,EAAEnB,QAAQ,CAACC,OAAO,CAAC,YAAD,CAAR,EAAwB,IAAxB,CALO;AAMzBmB,EAAAA,OAAO,EAAEpB,QAAQ,CAACC,OAAO,CAAC,WAAD,CAAR,EAAuB,IAAvB,CANQ;AAOzBoB,EAAAA,MAAM,EAAErB,QAAQ,CAACC,OAAO,CAAC,UAAD,CAAR,EAAsB,IAAtB,CAPS;AAQzBqB,EAAAA,IAAI,EAAEtB,QAAQ,CAACC,OAAO,CAAC,QAAD,CAAR,EAAoB,IAApB;AARW,CAA7B;AAUAK,KAAK,CAACQ,EAAN,CAASS,MAAT,GAAkBvB,QAAQ,CAACC,OAAO,CAAC,UAAD,CAAR,EAAsBK,KAAK,CAACQ,EAA5B,CAA1B;AAEAV,aAAa,CAACE,KAAK,CAACQ,EAAP,CAAb;AAEAR,KAAK,CAACO,SAAN,CAAgBW,IAAhB,GAAuBxB,QAAQ,CAACC,OAAO,CAAC,QAAD,CAAR,EAAoB,IAApB,CAA/B;AAEAwB,MAAM,CAACC,OAAP,GAAiBpB,KAAjB","sourcesContent":["\"use strict\";\nvar currying = require(\"zz-utils/src/function/currying\");\nvar isPlainObj = require(\"zz-utils/src/object/isPlainObj\");\nvar apply = require(\"./apply\");\nvar extendFromCtx = require(\"./extendFromCtx\");\nvar defaultPointSize = 3;\n/**\n * Shape object constructor\n * \n * @constructor\n * @param {CanvasRenderingContext2D} ctx canvas rendering content\n * @param {Object} options ctx config options\n * @param {Number} options.lineWidth ctx line width\n * @param {DOMString | CanvasGradient | CanvasPattern} options.fillStyle ctx fill style\n * @param {DOMString | CanvasGradient | CanvasPattern} options.strokeStyle ctx stroke style\n * @param {DOMString} options.font ctx font\n * @returns {Shape}\n */\nfunction Shape(ctx, options) {\n    this.ctx = ctx;\n\n    if (isPlainObj(options)) {\n        var keys = Object.keys(options);\n        keys.forEach(function (key) {\n            require(\"./setting\")(ctx, key, options[key]);\n        })\n    }\n}\n\nShape.prototype = Shape.fn = {\n    constructor: Shape,\n    pointSize: defaultPointSize,\n    point: currying(require(\"./point\"), null, defaultPointSize),\n    line: currying(require(\"./line\"), null),\n    polyline: currying(require(\"./polyline\"), null),\n    polygon: currying(require(\"./polygon\"), null),\n    circle: currying(require(\"./circle\"), null),\n    path: currying(require(\"./path\"), null)\n};\nShape.fn.extend = currying(require(\"./extend\"), Shape.fn);\n\nextendFromCtx(Shape.fn);\n\nShape.prototype.rect = currying(require(\"./rect\"), null);\n\nmodule.exports = Shape;"]},"metadata":{},"sourceType":"script"}