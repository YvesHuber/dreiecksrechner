{"ast":null,"code":"var _jsxFileName = \"/Users/yveshuber/Documents/Dokumente/020_BBW/ABK/001_Mathe/dreiecksrechner/src/Dreieck.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dreieck() {\n  _s();\n\n  const formuladata = [{\n    Value: \"c\",\n    Formula: \"√ A^2 + B^2\",\n    id: 0,\n    inputname1: \"Kathete\",\n    inputname2: \"Kathete\",\n    outputname: \"Hypothenuse\",\n    input1: 0,\n    input2: 0,\n    result: 0\n  }, {\n    Value: \"a\",\n    Formula: \"√ C^2 - B^2\",\n    id: 1\n  }, {\n    Value: \"alpha\",\n    Formula: \"180 - gamma - beta\",\n    id: 2\n  }, {\n    Value: \"gamma\",\n    Formula: \"180- alpha - beta\",\n    id: 3\n  }, {\n    Value: \"height\",\n    Formula: \"2 * a / b\",\n    id: 4\n  }];\n  const [selectFormulas, setselectFormulas] = useState(formuladata);\n  const [selectedFormula, setselectedFormula] = useState({\n    Value: \"\",\n    Formula: \"\"\n  });\n  const [alphaangle, setalphaangle] = useState(0);\n  const [betaangle, setbetaangle] = useState(0);\n  const [gammaangle, setgammaangle] = useState(0);\n  const [alength, setalength] = useState(0);\n  const [blength, setblength] = useState(0);\n  const [clength, setclength] = useState(0);\n\n  function calculate() {\n    switch (selectedFormula.Value) {\n      case 0:\n        //calculate the hypotenuse\n        selectedFormula.result = 180 - selectedFormula.input1 - selectedFormula.input2;\n        return;\n\n      case 1:\n        //calculate the kathete\n        return;\n\n      case 2:\n        //calculate alphaangle\n        return;\n\n      case 3:\n        //calculate gammaangle\n        return;\n\n      case 4:\n        // calculate the height\n        return;\n    }\n\n    calculateangle();\n    calculatelength();\n  }\n\n  function calculateangle() {\n    let result;\n    result = 180 - alphaangle - betaangle;\n    setgammaangle(result);\n  }\n\n  function calculatelength() {\n    let result;\n    result = Math.sqrt(Math.pow(alength, 2) + Math.pow(blength, 2));\n    setclength(Math.round(result));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"What do you want to calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), selectFormulas.map((object, i) => /*#__PURE__*/_jsxDEV(\"a\", {\n          children: [\" \", object.Value, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"formula\",\n            onChange: e => setselectedFormula(object)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 50\n        }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Current formula = \", selectedFormula.Formula]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Alpha Winkel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: alphaangle,\n        onChange: e => {\n          if (e.target.value <= 178) {\n            setalphaangle(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"Beta Winkel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: betaangle,\n        onChange: e => {\n          if (e.target.value <= 178) {\n            setbetaangle(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"A l\\xE4nge \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: alength,\n        onChange: e => {\n          setalength(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"lable\", {\n        children: \"B l\\xE4nge \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: blength,\n        onChange: e => {\n          setblength(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        value: \"calculate\",\n        onClick: calculate,\n        children: \"calculate \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Alpha\\xB0 = \", alphaangle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Beta\\xB0 = \", betaangle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gamma\\xB0 = \", gammaangle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dreieck, \"G2jYKQKWkU3AE6crs7+rnn4kPKo=\");\n\n_c = Dreieck;\nexport default Dreieck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dreieck\");","map":{"version":3,"sources":["/Users/yveshuber/Documents/Dokumente/020_BBW/ABK/001_Mathe/dreiecksrechner/src/Dreieck.js"],"names":["useEffect","useState","Dreieck","formuladata","Value","Formula","id","inputname1","inputname2","outputname","input1","input2","result","selectFormulas","setselectFormulas","selectedFormula","setselectedFormula","alphaangle","setalphaangle","betaangle","setbetaangle","gammaangle","setgammaangle","alength","setalength","blength","setblength","clength","setclength","calculate","calculateangle","calculatelength","Math","sqrt","pow","round","map","object","i","e","target","value"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\";\n\nfunction Dreieck() {\n  const formuladata =[\n    {Value: \"c\", Formula: \"√ A^2 + B^2\", id: 0, inputname1: \"Kathete\", inputname2: \"Kathete\", outputname: \"Hypothenuse\", input1: 0, input2: 0, result: 0},\n    {Value: \"a\", Formula: \"√ C^2 - B^2\", id: 1},\n    {Value: \"alpha\", Formula: \"180 - gamma - beta\", id: 2},\n    {Value: \"gamma\", Formula: \"180- alpha - beta\", id: 3},\n    {Value: \"height\", Formula: \"2 * a / b\", id: 4},\n    ];\n    const [selectFormulas, setselectFormulas] = useState(formuladata);\n    const [selectedFormula, setselectedFormula] = useState({Value: \"\", Formula: \"\"});\n\n    const [alphaangle, setalphaangle] = useState(0);\n    const [betaangle, setbetaangle] = useState(0);\n    const [gammaangle, setgammaangle] = useState(0);\n\n    const [alength, setalength] = useState(0);\n    const [blength, setblength] = useState(0);\n    const [clength, setclength] = useState(0);\n\n    function calculate(){\n      switch(selectedFormula.Value){\n        case 0:\n          //calculate the hypotenuse\n          selectedFormula.result = 180 - selectedFormula.input1 - selectedFormula.input2;\n          return;\n        case 1:\n          //calculate the kathete\n          return;\n        case 2:\n          //calculate alphaangle\n          return; \n        case 3:\n          //calculate gammaangle\n          return; \n        case 4:\n          // calculate the height\n          return;\n      }\n      calculateangle();\n      calculatelength();\n      \n    }\n\n    function calculateangle(){\n      let result;\n      result = 180-alphaangle-betaangle;\n        setgammaangle(result);\n    }\n    function calculatelength(){\n      let result;\n      result = Math.sqrt(Math.pow(alength,2) + Math.pow(blength,2));\n      setclength(Math.round(result));\n    }\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <select>\n      <option>What do you want to calculate</option>\n          { selectFormulas.map ( (object, i) => (<a> {object.Value} <input key={i} type=\"radio\" name=\"formula\" onChange={ (e) => setselectedFormula(object)}/></a>))}\n      <h4>Current formula = {selectedFormula.Formula}</h4>\n      </select>\n      \n      <lable>Alpha Winkel</lable>\n      <input type=\"number\" value={alphaangle} onChange={ (e) => {if(e.target.value <= 178){\n          setalphaangle(e.target.value)\n      }}}/>\n      <lable>Beta Winkel</lable>\n      <input type=\"number\" value={betaangle} onChange={ (e) => {if(e.target.value <= 178){\n          setbetaangle(e.target.value)\n      }}}/>\n      <lable>A länge </lable>\n      <input type=\"number\" value={alength} onChange={ (e) => {\n          setalength(e.target.value)\n      }}/>\n      <lable>B länge </lable>\n      <input type=\"number\" value={blength} onChange={ (e) => {\n          setblength(e.target.value)\n      }}/>\n      <button type=\"button\" value=\"calculate\" onClick={calculate}>calculate </button>\n\n      <p>Alpha° = {alphaangle}</p>\n      <p>Beta° = {betaangle}</p>\n      <p>Gamma° = {gammaangle}</p>\n      \n\n\n      \n\n\n        \n      </header>\n    </div>\n  );\n}\nexport default Dreieck;\n"]},"metadata":{},"sourceType":"module"}